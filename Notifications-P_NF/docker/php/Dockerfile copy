FROM php:8.1-fpm-alpine AS base
LABEL Name=P_AE-LukaszZychal Version=0.0.1
WORKDIR /var/www/html
COPY ./ /var/www/html
RUN apk add wget git htop postgresql-dev bash 
RUN docker-php-ext-install pdo pdo_pgsql  
RUN apk add --update --no-cache  --virtual .build-dependencies $PHPIZE_DEPS 
# RUN pecl install apcu && docker-php-ext-enable apcu && pecl clear-cache 
RUN curl -sS https://get.symfony.com/cli/installer | bash
# # COPY --from=composer/composer /usr/bin/composer /usr/bin/composer


FROM php:8.1-fpm-alpine as xdebuger
RUN pecl install apcu && docker-php-ext-enable apcu && pecl clear-cache 
 RUN apk add \ 
--no-cache $PHPIZE_DEPS \ 
 &&  apk add --update linux-headers \
 && pecl install xdebug-3.2.0alpha2 \
 && docker-php-ext-enable xdebug \
 && docker-php-ext-configure intl \
 && docker-php-ext-install \
        intl \
 && docker-php-ext-enable intl 
WORKDIR /var/www/html
CMD [ "ls","-l" ];

FROM composer/composer as composer
WORKDIR /var/www/html
# COPY ./ /var/www/html/
RUN composer install
CMD [ "ls","-l" ];

FROM base as dev
WORKDIR /var/www/html
COPY --from=composer ./ /var/www/html/
COPY --from=xdebuger ./ /var/www/html/
 # Rozwiązaneie tymczasowe
RUN chmod -R ugo+rwx .

EXPOSE 80

# FROM composer AS xdebug
# COPY --from=build ./ ./
# COPY --from=composer ./ ./
#
# FROM build AS dev
# # COPY --from=composer-base /usr/bin/composer /usr/bin/composer
# RUN chmod +x /usr/bin/composer;
# COPY --from=instal_vendor  /var/www/html/vendor /var/www/html/vendor

# # Rozwiązaneie tymczasowe
# RUN chmod -R ugo+rwx .

# EXPOSE 80