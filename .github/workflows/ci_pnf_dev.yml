name: ci-P_NF-dev

on:
  push:
    paths:
      - "Notifications-P_NF/**"
      - ".github/workflows/ci_pnf_dev.yml"

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
     - 
      name: Checkout
      uses: actions/checkout@v3
     - 
      name: Copy file
      run: |
        ls -la Notifications-P_NF
        cp -Rf Notifications-P_NF/. .
        
     - 
      name: Build containers
      run: |
       ls -la 
       ls -la ${PWD}/docker/symfony/ 
       chmod -R +x ${PWD}/docker/. ${PWD}/bin/.
       docker network create background_network
       ${PWD}/docker/symfony/rebuild-container-and-up
       ${PWD}/docker/symfony/install-cli
       ${PWD}/docker/symfony/run-server-symfony
       docker-compose exec -T php bash -c 'php -v && composer --version'
       
     - 
      name: Save image docker
      run: |
        docker save php > php.tar   
     - 
      name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
       name: P_NF 
       path: .

  StaticCodeAnalysis:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: StaticCodeAnalysis
        run: echo 'StaticCodeAnalysis '
      -
       name: Download a Build Artifact
       uses: actions/download-artifact@v3.0.0
       with:
        name: P_NF 
      - 
       name: Load Docker image
       run: |
         ls -l
         ls -l ${PWD}
         docker load --input ${PWD}/php.tar
         docker network create background_network
         docker-compose -f ${PWD}/docker-compose.dev.yml up -d 
         chmod +x ${PWD}/docker/symfony/vendor-install
         ${PWD}/docker/symfony/vendor-install
         docker container ls
      -    
       name: PhpStan
       run: |
        echo "PhpStan"
          sudo chmod -R +x ${PWD}/docker/.
          sudo chmod -R +x ${PWD}/vendor/.
          echo "php-cs-fixer script"
          ${PWD}/docker/symfony/static-code-analysis/phpstan
      - 
        name: Php-Cs-Fixer
        run: | 
          echo "Php-Cs-Fixer"
          sudo chmod -R +x ${PWD}/docker/.
          sudo chmod -R +x ${PWD}/vendor/.
          echo "php-cs-fixer script"
          ${PWD}/docker/symfony/static-code-analysis/php-cs-fixer-analysee
          

  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      -
        name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
         name: P_NF 
      - 
       name: Load Docker image
       run: |
         ls -l
         ls -l ${PWD}
         docker load --input ${PWD}/php.tar
         docker network create background_network
         docker-compose -f ${PWD}/docker-compose.dev.yml up -d 
         chmod +x ${PWD}/docker/symfony/vendor-install
         ${PWD}/docker/symfony/vendor-install
         docker container ls
      - 
        name: Unit Test
        run: | 
         echo "Unit Test"
         ls -la ${PWD}
         chmod -R +x  ${PWD}/docker/symfony/cmd ${PWD}/tests/.
         ${PWD}/docker/symfony/cmd php bin/phpunit tests/ --group Unit
      - 
       name: Integration Test
       run: |
         echo "Integration Test"
         chmod -R +x  ${PWD}/docker/symfony/cmd ${PWD}/tests/.
         ${PWD}/docker/symfony/cmd php bin/phpunit tests/ --group Integration  
      -
        name: Functional Test
        run: | 
         echo "Functional Test"
         chmod -R +x  ${PWD}/docker/. ${PWD}/tests/. ${PWD}/bin/.
         ${PWD}/docker/symfony/test/functional
      - 
       name: Application Test
       run: | 
         echo "Application Test"
         chmod -R +x ${PWD}/docker/symfony/cmd tests/.
         ${PWD}/docker/symfony/cmd php bin/phpunit tests/ --group Aspplication  
      - 
        name: No Group Test
        run: | 
          echo "No Group Test"
          chmod -R +x  ${PWD}/docker/symfony/cmd tests/.
          ${PWD}/docker/symfony/cmd php bin/phpunit tests/ --exclude-group Unit,Integration,Application
  
